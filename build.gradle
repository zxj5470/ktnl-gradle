subprojects {
    buildscript {
        repositories {
            mavenCentral()
            maven {
                url "https://dl.bintray.com/jetbrains/kotlin-native-dependencies"
            }
        }

        dependencies {
            classpath "org.jetbrains.kotlin:kotlin-native-gradle-plugin:+"
        }
    }
}
//windows

public static void  downLoadFromUrl(String urlStr,String fileName) throws IOException{
    URL url = new URL(urlStr);
    HttpURLConnection conn = (HttpURLConnection)url.openConnection();
    //设置超时间为3秒
    conn.setConnectTimeout(3*1000);
    //防止屏蔽程序抓取而返回403错误
    conn.setRequestProperty("User-Agent", "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.36 QQBrowser/4.2.4861.400");

    //得到输入流
    InputStream inputStream = conn.getInputStream();
    //获取自己数组
    byte[] getData = readInputStream(inputStream);

    //文件保存位置
    File saveDir = new File(fileName);
    if(!saveDir.exists()){
        saveDir.mkdir();
    }
    File file = new File(fileName)
    FileOutputStream fos = new FileOutputStream(file);
    fos.write(getData);
    if(fos!=null){
        fos.close();
    }
    if(inputStream!=null){
        inputStream.close();
    }
    System.out.println("info:"+url+" download success")
}



/**
 * 从输入流中获取字节数组
 * @param inputStream
 * @return
 * @throws IOException
 */
public static  byte[] readInputStream(InputStream inputStream) throws IOException {
    byte[] buffer = new byte[1024];
    int len = 0;
    ByteArrayOutputStream bos = new ByteArrayOutputStream();
    while((len = inputStream.read(buffer)) != -1) {
        bos.write(buffer, 0, len);
    }
    bos.close();
    return bos.toByteArray();
}

task buildInWindows(type: Exec) {
    workingDir projectDir.canonicalPath
    downLoadFromUrl("https://github.com/JetBrains/kotlin-native/releases/download/v0.4/kotlin-native-windows-0.4.zip","ktnw.zip")
    commandLine "dir"
    commandLine "${projectDir.canonicalPath}/ktnl/build.bat"
}
